Miglioriamo ancora EpiBooks

Inizia dal tuo progetto precedente (o dalla soluzione di ieri), oggi permetterai agli utenti di lasciare recensioni sui libri. Ricorda, ogni commento postato sar√† visibile a tutti :)

Aggiungi un componente CommentArea alla fine di SingleBook. Quando l'utente cliccher√† su un SingleBook (quindi quando la propriet√† selected nel suo stato diventa true), i commenti dovranno apparire (suggerimento: short-circuit operator!).CommentArea dovr√† fare la fetch delle recensioni per il libro selezionato, e salvare i commenti nel proprio stato. Conterr√† inoltre due sotto-componenti: CommentsList and AddComment.CommentsList mostrer√† le recensioni del libro in un elenco; l'array di recensioni gli verr√† passato come prop dal componente CommentArea. La singola recensione verr√† visualizzata utilizzando un altro componente, chiamato SingleComment.AddComment conterr√† un form per aggiungere il testo della recensione e il voto (da 1 o a 5). Questo componente dovr√† permettere all'utente di fare la POST del nuovo commento sul libro selezionato.[EXTRA]Aggiungi vicino ogni commento un bottone per cancellarlo (DELETE). Dovr√† creare una richiesta verso https://striveschool-api.herokuapp.com/api/comments/:commentIdCrea un componente Loading. Questo apparir√† nella pagina quando la richiesta √® in fase di elaborazione, ma non ancora risolta.Crea un componente Error. Se qualcosa andr√† male con una network request, dovr√† apparire un messaggio di errore.

üìÉ API Docs:

Hai un endpoint CRUD per commenti su:

https://striveschool-api.herokuapp.com/api/comments/

Questo significa che puoi fare il GET, DELETE, POST, PUT dei dati da l√¨.

‚ùó‚ùó‚ùó¬†IMPORTANTE ‚ùó‚ùó‚ùóDovrai usare gli headers di autenticazione (Authentication headers)¬†(prendi un nuovo token su https://strive.school/studentlogin se il precedente √® scaduto)

Il commento √® strutturato ad oggetto in questa maniera:

{¬† "comment": string¬† "rate": string¬† "elementId": string}

Dove:

comment √® il testo del commento inserito dall'utenterate √® il valore tra 1 e 5elementId √® il codice ASIN del libro

Esempio:

{¬† "comment": "A good book but definitely I don't like many parts of the plot",¬† "rate": "3",¬† "elementId": "0316438960"}

‚ö†Ô∏è WARNING ‚ö†Ô∏è

Fare una GET su https://striveschool-api.herokuapp.com/api/comments/ ti ritorner√† TUTTI i commenti a database. Probabilmente a te interesser√† principalmente ricevere i commenti di un singolo libro alla volta: per fare ci√≤ dovrai specificare l'elementId/ASIN del libro nella tua URL:https://striveschool-api.herokuapp.com/api/comments/:elementId

Esempio:

https://striveschool-api.herokuapp.com/api/comments/0316438960 trover√† i commenti di un singolo libro.
